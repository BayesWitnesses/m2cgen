using static System.Math;
namespace ML {
    public static class Model {
        public static double[] Score(double[] input) {
            double var0;
            var0 = (0) - (0.25);
            double var1;
            var1 = Exp((var0) * ((((Pow((5.4) - (input[0]), 2)) + (Pow((3.0) - (input[1]), 2))) + (Pow((4.5) - (input[2]), 2))) + (Pow((1.5) - (input[3]), 2))));
            double var2;
            var2 = Exp((var0) * ((((Pow((6.2) - (input[0]), 2)) + (Pow((2.2) - (input[1]), 2))) + (Pow((4.5) - (input[2]), 2))) + (Pow((1.5) - (input[3]), 2))));
            double var3;
            var3 = Exp((var0) * ((((Pow((5.0) - (input[0]), 2)) + (Pow((2.3) - (input[1]), 2))) + (Pow((3.3) - (input[2]), 2))) + (Pow((1.0) - (input[3]), 2))));
            double var4;
            var4 = Exp((var0) * ((((Pow((5.9) - (input[0]), 2)) + (Pow((3.2) - (input[1]), 2))) + (Pow((4.8) - (input[2]), 2))) + (Pow((1.8) - (input[3]), 2))));
            double var5;
            var5 = Exp((var0) * ((((Pow((5.0) - (input[0]), 2)) + (Pow((2.0) - (input[1]), 2))) + (Pow((3.5) - (input[2]), 2))) + (Pow((1.0) - (input[3]), 2))));
            double var6;
            var6 = Exp((var0) * ((((Pow((6.7) - (input[0]), 2)) + (Pow((3.0) - (input[1]), 2))) + (Pow((5.0) - (input[2]), 2))) + (Pow((1.7) - (input[3]), 2))));
            double var7;
            var7 = Exp((var0) * ((((Pow((7.0) - (input[0]), 2)) + (Pow((3.2) - (input[1]), 2))) + (Pow((4.7) - (input[2]), 2))) + (Pow((1.4) - (input[3]), 2))));
            double var8;
            var8 = Exp((var0) * ((((Pow((4.9) - (input[0]), 2)) + (Pow((2.4) - (input[1]), 2))) + (Pow((3.3) - (input[2]), 2))) + (Pow((1.0) - (input[3]), 2))));
            double var9;
            var9 = Exp((var0) * ((((Pow((6.3) - (input[0]), 2)) + (Pow((2.5) - (input[1]), 2))) + (Pow((4.9) - (input[2]), 2))) + (Pow((1.5) - (input[3]), 2))));
            double var10;
            var10 = Exp((var0) * ((((Pow((6.0) - (input[0]), 2)) + (Pow((2.7) - (input[1]), 2))) + (Pow((5.1) - (input[2]), 2))) + (Pow((1.6) - (input[3]), 2))));
            double var11;
            var11 = Exp((var0) * ((((Pow((5.7) - (input[0]), 2)) + (Pow((2.6) - (input[1]), 2))) + (Pow((3.5) - (input[2]), 2))) + (Pow((1.0) - (input[3]), 2))));
            double var12;
            var12 = Exp((var0) * ((((Pow((5.1) - (input[0]), 2)) + (Pow((3.8) - (input[1]), 2))) + (Pow((1.9) - (input[2]), 2))) + (Pow((0.4) - (input[3]), 2))));
            double var13;
            var13 = Exp((var0) * ((((Pow((4.4) - (input[0]), 2)) + (Pow((2.9) - (input[1]), 2))) + (Pow((1.4) - (input[2]), 2))) + (Pow((0.2) - (input[3]), 2))));
            double var14;
            var14 = Exp((var0) * ((((Pow((5.7) - (input[0]), 2)) + (Pow((4.4) - (input[1]), 2))) + (Pow((1.5) - (input[2]), 2))) + (Pow((0.4) - (input[3]), 2))));
            double var15;
            var15 = Exp((var0) * ((((Pow((5.8) - (input[0]), 2)) + (Pow((4.0) - (input[1]), 2))) + (Pow((1.2) - (input[2]), 2))) + (Pow((0.2) - (input[3]), 2))));
            double var16;
            var16 = Exp((var0) * ((((Pow((5.1) - (input[0]), 2)) + (Pow((3.3) - (input[1]), 2))) + (Pow((1.7) - (input[2]), 2))) + (Pow((0.5) - (input[3]), 2))));
            double var17;
            var17 = Exp((var0) * ((((Pow((5.7) - (input[0]), 2)) + (Pow((3.8) - (input[1]), 2))) + (Pow((1.7) - (input[2]), 2))) + (Pow((0.3) - (input[3]), 2))));
            double var18;
            var18 = Exp((var0) * ((((Pow((4.3) - (input[0]), 2)) + (Pow((3.0) - (input[1]), 2))) + (Pow((1.1) - (input[2]), 2))) + (Pow((0.1) - (input[3]), 2))));
            double var19;
            var19 = Exp((var0) * ((((Pow((4.5) - (input[0]), 2)) + (Pow((2.3) - (input[1]), 2))) + (Pow((1.3) - (input[2]), 2))) + (Pow((0.3) - (input[3]), 2))));
            double var20;
            var20 = Exp((var0) * ((((Pow((6.3) - (input[0]), 2)) + (Pow((2.7) - (input[1]), 2))) + (Pow((4.9) - (input[2]), 2))) + (Pow((1.8) - (input[3]), 2))));
            double var21;
            var21 = Exp((var0) * ((((Pow((6.0) - (input[0]), 2)) + (Pow((3.0) - (input[1]), 2))) + (Pow((4.8) - (input[2]), 2))) + (Pow((1.8) - (input[3]), 2))));
            double var22;
            var22 = Exp((var0) * ((((Pow((6.3) - (input[0]), 2)) + (Pow((2.8) - (input[1]), 2))) + (Pow((5.1) - (input[2]), 2))) + (Pow((1.5) - (input[3]), 2))));
            double var23;
            var23 = Exp((var0) * ((((Pow((5.8) - (input[0]), 2)) + (Pow((2.8) - (input[1]), 2))) + (Pow((5.1) - (input[2]), 2))) + (Pow((2.4) - (input[3]), 2))));
            double var24;
            var24 = Exp((var0) * ((((Pow((6.1) - (input[0]), 2)) + (Pow((3.0) - (input[1]), 2))) + (Pow((4.9) - (input[2]), 2))) + (Pow((1.8) - (input[3]), 2))));
            double var25;
            var25 = Exp((var0) * ((((Pow((7.7) - (input[0]), 2)) + (Pow((2.6) - (input[1]), 2))) + (Pow((6.9) - (input[2]), 2))) + (Pow((2.3) - (input[3]), 2))));
            double var26;
            var26 = Exp((var0) * ((((Pow((6.9) - (input[0]), 2)) + (Pow((3.1) - (input[1]), 2))) + (Pow((5.1) - (input[2]), 2))) + (Pow((2.3) - (input[3]), 2))));
            double var27;
            var27 = Exp((var0) * ((((Pow((6.3) - (input[0]), 2)) + (Pow((3.3) - (input[1]), 2))) + (Pow((6.0) - (input[2]), 2))) + (Pow((2.5) - (input[3]), 2))));
            double var28;
            var28 = Exp((var0) * ((((Pow((4.9) - (input[0]), 2)) + (Pow((2.5) - (input[1]), 2))) + (Pow((4.5) - (input[2]), 2))) + (Pow((1.7) - (input[3]), 2))));
            double var29;
            var29 = Exp((var0) * ((((Pow((6.0) - (input[0]), 2)) + (Pow((2.2) - (input[1]), 2))) + (Pow((5.0) - (input[2]), 2))) + (Pow((1.5) - (input[3]), 2))));
            double var30;
            var30 = Exp((var0) * ((((Pow((7.9) - (input[0]), 2)) + (Pow((3.8) - (input[1]), 2))) + (Pow((6.4) - (input[2]), 2))) + (Pow((2.0) - (input[3]), 2))));
            double var31;
            var31 = Exp((var0) * ((((Pow((7.2) - (input[0]), 2)) + (Pow((3.0) - (input[1]), 2))) + (Pow((5.8) - (input[2]), 2))) + (Pow((1.6) - (input[3]), 2))));
            double var32;
            var32 = Exp((var0) * ((((Pow((7.7) - (input[0]), 2)) + (Pow((3.8) - (input[1]), 2))) + (Pow((6.7) - (input[2]), 2))) + (Pow((2.2) - (input[3]), 2))));
            return new double[3] {(((((((((((((((((((-0.08359187780790468) + ((var1) * (-0.0))) + ((var2) * (-0.0))) + ((var3) * (-0.4393498355605194))) + ((var4) * (-0.009465620856664334))) + ((var5) * (-0.16223369966927))) + ((var6) * (-0.26861888775075243))) + ((var7) * (-0.4393498355605194))) + ((var8) * (-0.4393498355605194))) + ((var9) * (-0.0))) + ((var10) * (-0.0))) + ((var11) * (-0.19673905328606292))) + ((var12) * (0.3340655283922188))) + ((var13) * (0.3435087305152051))) + ((var14) * (0.4393498355605194))) + ((var15) * (0.0))) + ((var16) * (0.28614124535416424))) + ((var17) * (0.11269159286168087))) + ((var18) * (0.0))) + ((var19) * (0.4393498355605194)), (((((((((((((((((((((-0.18563912331454907) + ((var20) * (-0.0))) + ((var21) * (-0.06014273244194299))) + ((var22) * (-0.0))) + ((var23) * (-0.031132453078851926))) + ((var24) * (-0.0))) + ((var25) * (-0.3893079321588921))) + ((var26) * (-0.06738007627290196))) + ((var27) * (-0.1225075748937126))) + ((var28) * (-0.3893079321588921))) + ((var29) * (-0.29402231709614085))) + ((var30) * (-0.3893079321588921))) + ((var31) * (-0.0))) + ((var32) * (-0.028242141062729226))) + ((var12) * (0.16634667752431267))) + ((var13) * (0.047772685163074764))) + ((var14) * (0.3893079321588921))) + ((var15) * (0.3893079321588921))) + ((var16) * (0.0))) + ((var17) * (0.0))) + ((var18) * (0.3893079321588921))) + ((var19) * (0.3893079321588921)), ((((((((((((((((((((((((0.5566649875797668) + ((var20) * (-25.563066587228416))) + ((var21) * (-38.35628154976547))) + ((var22) * (-38.35628154976547))) + ((var23) * (-0.0))) + ((var24) * (-38.35628154976547))) + ((var25) * (-0.0))) + ((var26) * (-0.0))) + ((var27) * (-0.0))) + ((var28) * (-6.2260303727828745))) + ((var29) * (-18.42781911624364))) + ((var30) * (-0.14775026537286423))) + ((var31) * (-7.169755983020096))) + ((var32) * (-0.0))) + ((var1) * (12.612328267927264))) + ((var2) * (6.565812506955159))) + ((var3) * (0.0))) + ((var4) * (38.35628154976547))) + ((var5) * (0.0))) + ((var6) * (38.35628154976547))) + ((var7) * (0.0))) + ((var8) * (0.0))) + ((var9) * (38.35628154976547))) + ((var10) * (38.35628154976547))) + ((var11) * (0.0))};
        }
    }
}
