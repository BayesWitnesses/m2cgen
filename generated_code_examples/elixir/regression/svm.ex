defmodule Model do
    @compile {:inline, read: 2}
    defp read(bin, pos) do
        <<_::size(pos)-unit(64)-binary, value::float, _::binary>> = bin
        value
    end
    defp list_to_binary(list) do
        for i <- list, into: <<>>, do: <<i::float>>
    end
    def score(input) do
        input = list_to_binary(input)
        func0 = fn ->
            25.346480984077544 + :math.exp(-0.0000036459736698188483 * (:math.pow(16.8118 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(18.1 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.7 - read(input,4), 2.0) + :math.pow(5.277 - read(input,5), 2.0) + :math.pow(98.1 - read(input,6), 2.0) + :math.pow(1.4261 - read(input,7), 2.0) + :math.pow(24.0 - read(input,8), 2.0) + :math.pow(666.0 - read(input,9), 2.0) + :math.pow(20.2 - read(input,10), 2.0) + :math.pow(396.9 - read(input,11), 2.0) + :math.pow(30.81 - read(input,12), 2.0))) * -1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(38.3518 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(18.1 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.693 - read(input,4), 2.0) + :math.pow(5.453 - read(input,5), 2.0) + :math.pow(100.0 - read(input,6), 2.0) + :math.pow(1.4896 - read(input,7), 2.0) + :math.pow(24.0 - read(input,8), 2.0) + :math.pow(666.0 - read(input,9), 2.0) + :math.pow(20.2 - read(input,10), 2.0) + :math.pow(396.9 - read(input,11), 2.0) + :math.pow(30.59 - read(input,12), 2.0))) * -1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(0.84054 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(8.14 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.538 - read(input,4), 2.0) + :math.pow(5.599 - read(input,5), 2.0) + :math.pow(85.7 - read(input,6), 2.0) + :math.pow(4.4546 - read(input,7), 2.0) + :math.pow(4.0 - read(input,8), 2.0) + :math.pow(307.0 - read(input,9), 2.0) + :math.pow(21.0 - read(input,10), 2.0) + :math.pow(303.42 - read(input,11), 2.0) + :math.pow(16.51 - read(input,12), 2.0))) * -1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(1.15172 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(8.14 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.538 - read(input,4), 2.0) + :math.pow(5.701 - read(input,5), 2.0) + :math.pow(95.0 - read(input,6), 2.0) + :math.pow(3.7872 - read(input,7), 2.0) + :math.pow(4.0 - read(input,8), 2.0) + :math.pow(307.0 - read(input,9), 2.0) + :math.pow(21.0 - read(input,10), 2.0) + :math.pow(358.77 - read(input,11), 2.0) + :math.pow(18.35 - read(input,12), 2.0))) * -1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(24.8017 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(18.1 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.693 - read(input,4), 2.0) + :math.pow(5.349 - read(input,5), 2.0) + :math.pow(96.0 - read(input,6), 2.0) + :math.pow(1.7028 - read(input,7), 2.0) + :math.pow(24.0 - read(input,8), 2.0) + :math.pow(666.0 - read(input,9), 2.0) + :math.pow(20.2 - read(input,10), 2.0) + :math.pow(396.9 - read(input,11), 2.0) + :math.pow(19.77 - read(input,12), 2.0))) * -1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(41.5292 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(18.1 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.693 - read(input,4), 2.0) + :math.pow(5.531 - read(input,5), 2.0) + :math.pow(85.4 - read(input,6), 2.0) + :math.pow(1.6074 - read(input,7), 2.0) + :math.pow(24.0 - read(input,8), 2.0) + :math.pow(666.0 - read(input,9), 2.0) + :math.pow(20.2 - read(input,10), 2.0) + :math.pow(329.46 - read(input,11), 2.0) + :math.pow(27.38 - read(input,12), 2.0))) * -0.3490103966325617
        end
        func1 = fn ->
            :math.exp(-0.0000036459736698188483 * (:math.pow(0.38735 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(25.65 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.581 - read(input,4), 2.0) + :math.pow(5.613 - read(input,5), 2.0) + :math.pow(95.6 - read(input,6), 2.0) + :math.pow(1.7572 - read(input,7), 2.0) + :math.pow(2.0 - read(input,8), 2.0) + :math.pow(188.0 - read(input,9), 2.0) + :math.pow(19.1 - read(input,10), 2.0) + :math.pow(359.29 - read(input,11), 2.0) + :math.pow(27.26 - read(input,12), 2.0))) * -1.0
        end
        func2 = fn ->
            func0.() + func1.() + :math.exp(-0.0000036459736698188483 * (:math.pow(0.05602 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(2.46 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.488 - read(input,4), 2.0) + :math.pow(7.831 - read(input,5), 2.0) + :math.pow(53.6 - read(input,6), 2.0) + :math.pow(3.1992 - read(input,7), 2.0) + :math.pow(3.0 - read(input,8), 2.0) + :math.pow(193.0 - read(input,9), 2.0) + :math.pow(17.8 - read(input,10), 2.0) + :math.pow(392.63 - read(input,11), 2.0) + :math.pow(4.45 - read(input,12), 2.0))) * 1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(25.0461 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(18.1 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.693 - read(input,4), 2.0) + :math.pow(5.987 - read(input,5), 2.0) + :math.pow(100.0 - read(input,6), 2.0) + :math.pow(1.5888 - read(input,7), 2.0) + :math.pow(24.0 - read(input,8), 2.0) + :math.pow(666.0 - read(input,9), 2.0) + :math.pow(20.2 - read(input,10), 2.0) + :math.pow(396.9 - read(input,11), 2.0) + :math.pow(26.77 - read(input,12), 2.0))) * -1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(8.26725 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(18.1 - read(input,2), 2.0) + :math.pow(1.0 - read(input,3), 2.0) + :math.pow(0.668 - read(input,4), 2.0) + :math.pow(5.875 - read(input,5), 2.0) + :math.pow(89.6 - read(input,6), 2.0) + :math.pow(1.1296 - read(input,7), 2.0) + :math.pow(24.0 - read(input,8), 2.0) + :math.pow(666.0 - read(input,9), 2.0) + :math.pow(20.2 - read(input,10), 2.0) + :math.pow(347.88 - read(input,11), 2.0) + :math.pow(8.88 - read(input,12), 2.0))) * 1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(5.66998 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(18.1 - read(input,2), 2.0) + :math.pow(1.0 - read(input,3), 2.0) + :math.pow(0.631 - read(input,4), 2.0) + :math.pow(6.683 - read(input,5), 2.0) + :math.pow(96.8 - read(input,6), 2.0) + :math.pow(1.3567 - read(input,7), 2.0) + :math.pow(24.0 - read(input,8), 2.0) + :math.pow(666.0 - read(input,9), 2.0) + :math.pow(20.2 - read(input,10), 2.0) + :math.pow(375.33 - read(input,11), 2.0) + :math.pow(3.73 - read(input,12), 2.0))) * 1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(1.51902 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(19.58 - read(input,2), 2.0) + :math.pow(1.0 - read(input,3), 2.0) + :math.pow(0.605 - read(input,4), 2.0) + :math.pow(8.375 - read(input,5), 2.0) + :math.pow(93.9 - read(input,6), 2.0) + :math.pow(2.162 - read(input,7), 2.0) + :math.pow(5.0 - read(input,8), 2.0) + :math.pow(403.0 - read(input,9), 2.0) + :math.pow(14.7 - read(input,10), 2.0) + :math.pow(388.45 - read(input,11), 2.0) + :math.pow(3.32 - read(input,12), 2.0))) * 1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(0.29819 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(6.2 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.504 - read(input,4), 2.0) + :math.pow(7.686 - read(input,5), 2.0) + :math.pow(17.0 - read(input,6), 2.0) + :math.pow(3.3751 - read(input,7), 2.0) + :math.pow(8.0 - read(input,8), 2.0) + :math.pow(307.0 - read(input,9), 2.0) + :math.pow(17.4 - read(input,10), 2.0) + :math.pow(377.51 - read(input,11), 2.0) + :math.pow(3.92 - read(input,12), 2.0))) * 1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(3.32105 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(19.58 - read(input,2), 2.0) + :math.pow(1.0 - read(input,3), 2.0) + :math.pow(0.871 - read(input,4), 2.0) + :math.pow(5.403 - read(input,5), 2.0) + :math.pow(100.0 - read(input,6), 2.0) + :math.pow(1.3216 - read(input,7), 2.0) + :math.pow(5.0 - read(input,8), 2.0) + :math.pow(403.0 - read(input,9), 2.0) + :math.pow(14.7 - read(input,10), 2.0) + :math.pow(396.9 - read(input,11), 2.0) + :math.pow(26.82 - read(input,12), 2.0))) * -0.400989603367655 + :math.exp(-0.0000036459736698188483 * (:math.pow(0.61154 - read(input,0), 2.0) + :math.pow(20.0 - read(input,1), 2.0) + :math.pow(3.97 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.647 - read(input,4), 2.0) + :math.pow(8.704 - read(input,5), 2.0) + :math.pow(86.9 - read(input,6), 2.0) + :math.pow(1.801 - read(input,7), 2.0) + :math.pow(5.0 - read(input,8), 2.0) + :math.pow(264.0 - read(input,9), 2.0) + :math.pow(13.0 - read(input,10), 2.0) + :math.pow(389.7 - read(input,11), 2.0) + :math.pow(5.12 - read(input,12), 2.0))) * 1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(0.02009 - read(input,0), 2.0) + :math.pow(95.0 - read(input,1), 2.0) + :math.pow(2.68 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.4161 - read(input,4), 2.0) + :math.pow(8.034 - read(input,5), 2.0) + :math.pow(31.9 - read(input,6), 2.0) + :math.pow(5.118 - read(input,7), 2.0) + :math.pow(4.0 - read(input,8), 2.0) + :math.pow(224.0 - read(input,9), 2.0) + :math.pow(14.7 - read(input,10), 2.0) + :math.pow(390.55 - read(input,11), 2.0) + :math.pow(2.88 - read(input,12), 2.0))) * 1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(0.08187 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(2.89 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.445 - read(input,4), 2.0) + :math.pow(7.82 - read(input,5), 2.0) + :math.pow(36.9 - read(input,6), 2.0) + :math.pow(3.4952 - read(input,7), 2.0) + :math.pow(2.0 - read(input,8), 2.0) + :math.pow(276.0 - read(input,9), 2.0) + :math.pow(18.0 - read(input,10), 2.0) + :math.pow(393.53 - read(input,11), 2.0) + :math.pow(3.57 - read(input,12), 2.0))) * 1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(0.57834 - read(input,0), 2.0) + :math.pow(20.0 - read(input,1), 2.0) + :math.pow(3.97 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.575 - read(input,4), 2.0) + :math.pow(8.297 - read(input,5), 2.0) + :math.pow(67.0 - read(input,6), 2.0) + :math.pow(2.4216 - read(input,7), 2.0) + :math.pow(5.0 - read(input,8), 2.0) + :math.pow(264.0 - read(input,9), 2.0) + :math.pow(13.0 - read(input,10), 2.0) + :math.pow(384.54 - read(input,11), 2.0) + :math.pow(7.44 - read(input,12), 2.0))) * 1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(1.35472 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(8.14 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.538 - read(input,4), 2.0) + :math.pow(6.072 - read(input,5), 2.0) + :math.pow(100.0 - read(input,6), 2.0) + :math.pow(4.175 - read(input,7), 2.0) + :math.pow(4.0 - read(input,8), 2.0) + :math.pow(307.0 - read(input,9), 2.0) + :math.pow(21.0 - read(input,10), 2.0) + :math.pow(376.73 - read(input,11), 2.0) + :math.pow(13.04 - read(input,12), 2.0))) * -1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(0.52693 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(6.2 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.504 - read(input,4), 2.0) + :math.pow(8.725 - read(input,5), 2.0) + :math.pow(83.0 - read(input,6), 2.0) + :math.pow(2.8944 - read(input,7), 2.0) + :math.pow(8.0 - read(input,8), 2.0) + :math.pow(307.0 - read(input,9), 2.0) + :math.pow(17.4 - read(input,10), 2.0) + :math.pow(382.0 - read(input,11), 2.0) + :math.pow(4.63 - read(input,12), 2.0))) * 1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(0.33147 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(6.2 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.507 - read(input,4), 2.0) + :math.pow(8.247 - read(input,5), 2.0) + :math.pow(70.4 - read(input,6), 2.0) + :math.pow(3.6519 - read(input,7), 2.0) + :math.pow(8.0 - read(input,8), 2.0) + :math.pow(307.0 - read(input,9), 2.0) + :math.pow(17.4 - read(input,10), 2.0) + :math.pow(378.95 - read(input,11), 2.0) + :math.pow(3.95 - read(input,12), 2.0))) * 1.0
        end
        func3 = fn ->
            :math.exp(-0.0000036459736698188483 * (:math.pow(1.13081 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(8.14 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.538 - read(input,4), 2.0) + :math.pow(5.713 - read(input,5), 2.0) + :math.pow(94.1 - read(input,6), 2.0) + :math.pow(4.233 - read(input,7), 2.0) + :math.pow(4.0 - read(input,8), 2.0) + :math.pow(307.0 - read(input,9), 2.0) + :math.pow(21.0 - read(input,10), 2.0) + :math.pow(360.17 - read(input,11), 2.0) + :math.pow(22.6 - read(input,12), 2.0))) * -1.0
        end
        func4 = fn ->
            func2.() + func3.() + :math.exp(-0.0000036459736698188483 * (:math.pow(4.89822 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(18.1 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.631 - read(input,4), 2.0) + :math.pow(4.97 - read(input,5), 2.0) + :math.pow(100.0 - read(input,6), 2.0) + :math.pow(1.3325 - read(input,7), 2.0) + :math.pow(24.0 - read(input,8), 2.0) + :math.pow(666.0 - read(input,9), 2.0) + :math.pow(20.2 - read(input,10), 2.0) + :math.pow(375.52 - read(input,11), 2.0) + :math.pow(3.26 - read(input,12), 2.0))) * 1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(1.25179 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(8.14 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.538 - read(input,4), 2.0) + :math.pow(5.57 - read(input,5), 2.0) + :math.pow(98.1 - read(input,6), 2.0) + :math.pow(3.7979 - read(input,7), 2.0) + :math.pow(4.0 - read(input,8), 2.0) + :math.pow(307.0 - read(input,9), 2.0) + :math.pow(21.0 - read(input,10), 2.0) + :math.pow(376.57 - read(input,11), 2.0) + :math.pow(21.02 - read(input,12), 2.0))) * -1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(0.06129 - read(input,0), 2.0) + :math.pow(20.0 - read(input,1), 2.0) + :math.pow(3.33 - read(input,2), 2.0) + :math.pow(1.0 - read(input,3), 2.0) + :math.pow(0.4429 - read(input,4), 2.0) + :math.pow(7.645 - read(input,5), 2.0) + :math.pow(49.7 - read(input,6), 2.0) + :math.pow(5.2119 - read(input,7), 2.0) + :math.pow(5.0 - read(input,8), 2.0) + :math.pow(216.0 - read(input,9), 2.0) + :math.pow(14.9 - read(input,10), 2.0) + :math.pow(377.07 - read(input,11), 2.0) + :math.pow(3.01 - read(input,12), 2.0))) * 1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(9.2323 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(18.1 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.631 - read(input,4), 2.0) + :math.pow(6.216 - read(input,5), 2.0) + :math.pow(100.0 - read(input,6), 2.0) + :math.pow(1.1691 - read(input,7), 2.0) + :math.pow(24.0 - read(input,8), 2.0) + :math.pow(666.0 - read(input,9), 2.0) + :math.pow(20.2 - read(input,10), 2.0) + :math.pow(366.15 - read(input,11), 2.0) + :math.pow(9.53 - read(input,12), 2.0))) * 1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(2.77974 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(19.58 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.871 - read(input,4), 2.0) + :math.pow(4.903 - read(input,5), 2.0) + :math.pow(97.8 - read(input,6), 2.0) + :math.pow(1.3459 - read(input,7), 2.0) + :math.pow(5.0 - read(input,8), 2.0) + :math.pow(403.0 - read(input,9), 2.0) + :math.pow(14.7 - read(input,10), 2.0) + :math.pow(396.9 - read(input,11), 2.0) + :math.pow(29.29 - read(input,12), 2.0))) * -1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(0.01381 - read(input,0), 2.0) + :math.pow(80.0 - read(input,1), 2.0) + :math.pow(0.46 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.422 - read(input,4), 2.0) + :math.pow(7.875 - read(input,5), 2.0) + :math.pow(32.0 - read(input,6), 2.0) + :math.pow(5.6484 - read(input,7), 2.0) + :math.pow(4.0 - read(input,8), 2.0) + :math.pow(255.0 - read(input,9), 2.0) + :math.pow(14.4 - read(input,10), 2.0) + :math.pow(394.23 - read(input,11), 2.0) + :math.pow(2.97 - read(input,12), 2.0))) * 1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(0.01538 - read(input,0), 2.0) + :math.pow(90.0 - read(input,1), 2.0) + :math.pow(3.75 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.394 - read(input,4), 2.0) + :math.pow(7.454 - read(input,5), 2.0) + :math.pow(34.2 - read(input,6), 2.0) + :math.pow(6.3361 - read(input,7), 2.0) + :math.pow(3.0 - read(input,8), 2.0) + :math.pow(244.0 - read(input,9), 2.0) + :math.pow(15.9 - read(input,10), 2.0) + :math.pow(386.34 - read(input,11), 2.0) + :math.pow(3.11 - read(input,12), 2.0))) * 0.7500000000002167 + :math.exp(-0.0000036459736698188483 * (:math.pow(1.38799 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(8.14 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.538 - read(input,4), 2.0) + :math.pow(5.95 - read(input,5), 2.0) + :math.pow(82.0 - read(input,6), 2.0) + :math.pow(3.99 - read(input,7), 2.0) + :math.pow(4.0 - read(input,8), 2.0) + :math.pow(307.0 - read(input,9), 2.0) + :math.pow(21.0 - read(input,10), 2.0) + :math.pow(232.6 - read(input,11), 2.0) + :math.pow(27.71 - read(input,12), 2.0))) * -1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(1.83377 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(19.58 - read(input,2), 2.0) + :math.pow(1.0 - read(input,3), 2.0) + :math.pow(0.605 - read(input,4), 2.0) + :math.pow(7.802 - read(input,5), 2.0) + :math.pow(98.2 - read(input,6), 2.0) + :math.pow(2.0407 - read(input,7), 2.0) + :math.pow(5.0 - read(input,8), 2.0) + :math.pow(403.0 - read(input,9), 2.0) + :math.pow(14.7 - read(input,10), 2.0) + :math.pow(389.61 - read(input,11), 2.0) + :math.pow(1.92 - read(input,12), 2.0))) * 1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(0.31533 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(6.2 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.504 - read(input,4), 2.0) + :math.pow(8.266 - read(input,5), 2.0) + :math.pow(78.3 - read(input,6), 2.0) + :math.pow(2.8944 - read(input,7), 2.0) + :math.pow(8.0 - read(input,8), 2.0) + :math.pow(307.0 - read(input,9), 2.0) + :math.pow(17.4 - read(input,10), 2.0) + :math.pow(385.05 - read(input,11), 2.0) + :math.pow(4.14 - read(input,12), 2.0))) * 1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(9.91655 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(18.1 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.693 - read(input,4), 2.0) + :math.pow(5.852 - read(input,5), 2.0) + :math.pow(77.8 - read(input,6), 2.0) + :math.pow(1.5004 - read(input,7), 2.0) + :math.pow(24.0 - read(input,8), 2.0) + :math.pow(666.0 - read(input,9), 2.0) + :math.pow(20.2 - read(input,10), 2.0) + :math.pow(338.16 - read(input,11), 2.0) + :math.pow(29.97 - read(input,12), 2.0))) * -1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(0.01501 - read(input,0), 2.0) + :math.pow(90.0 - read(input,1), 2.0) + :math.pow(1.21 - read(input,2), 2.0) + :math.pow(1.0 - read(input,3), 2.0) + :math.pow(0.401 - read(input,4), 2.0) + :math.pow(7.923 - read(input,5), 2.0) + :math.pow(24.8 - read(input,6), 2.0) + :math.pow(5.885 - read(input,7), 2.0) + :math.pow(1.0 - read(input,8), 2.0) + :math.pow(198.0 - read(input,9), 2.0) + :math.pow(13.6 - read(input,10), 2.0) + :math.pow(395.52 - read(input,11), 2.0) + :math.pow(3.16 - read(input,12), 2.0))) * 1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(0.25387 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(6.91 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.448 - read(input,4), 2.0) + :math.pow(5.399 - read(input,5), 2.0) + :math.pow(95.3 - read(input,6), 2.0) + :math.pow(5.87 - read(input,7), 2.0) + :math.pow(3.0 - read(input,8), 2.0) + :math.pow(233.0 - read(input,9), 2.0) + :math.pow(17.9 - read(input,10), 2.0) + :math.pow(396.9 - read(input,11), 2.0) + :math.pow(30.81 - read(input,12), 2.0))) * -1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(14.2362 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(18.1 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.693 - read(input,4), 2.0) + :math.pow(6.343 - read(input,5), 2.0) + :math.pow(100.0 - read(input,6), 2.0) + :math.pow(1.5741 - read(input,7), 2.0) + :math.pow(24.0 - read(input,8), 2.0) + :math.pow(666.0 - read(input,9), 2.0) + :math.pow(20.2 - read(input,10), 2.0) + :math.pow(396.9 - read(input,11), 2.0) + :math.pow(20.32 - read(input,12), 2.0))) * -1.0
        end
        func5 = fn ->
            :math.exp(-0.0000036459736698188483 * (:math.pow(22.5971 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(18.1 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.7 - read(input,4), 2.0) + :math.pow(5.0 - read(input,5), 2.0) + :math.pow(89.5 - read(input,6), 2.0) + :math.pow(1.5184 - read(input,7), 2.0) + :math.pow(24.0 - read(input,8), 2.0) + :math.pow(666.0 - read(input,9), 2.0) + :math.pow(20.2 - read(input,10), 2.0) + :math.pow(396.9 - read(input,11), 2.0) + :math.pow(31.99 - read(input,12), 2.0))) * -1.0
        end
        func4.() + func5.() + :math.exp(-0.0000036459736698188483 * (:math.pow(67.9208 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(18.1 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.693 - read(input,4), 2.0) + :math.pow(5.683 - read(input,5), 2.0) + :math.pow(100.0 - read(input,6), 2.0) + :math.pow(1.4254 - read(input,7), 2.0) + :math.pow(24.0 - read(input,8), 2.0) + :math.pow(666.0 - read(input,9), 2.0) + :math.pow(20.2 - read(input,10), 2.0) + :math.pow(384.97 - read(input,11), 2.0) + :math.pow(22.98 - read(input,12), 2.0))) * -1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(1.61282 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(8.14 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.538 - read(input,4), 2.0) + :math.pow(6.096 - read(input,5), 2.0) + :math.pow(96.9 - read(input,6), 2.0) + :math.pow(3.7598 - read(input,7), 2.0) + :math.pow(4.0 - read(input,8), 2.0) + :math.pow(307.0 - read(input,9), 2.0) + :math.pow(21.0 - read(input,10), 2.0) + :math.pow(248.31 - read(input,11), 2.0) + :math.pow(20.34 - read(input,12), 2.0))) * -1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(1.46336 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(19.58 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.605 - read(input,4), 2.0) + :math.pow(7.489 - read(input,5), 2.0) + :math.pow(90.8 - read(input,6), 2.0) + :math.pow(1.9709 - read(input,7), 2.0) + :math.pow(5.0 - read(input,8), 2.0) + :math.pow(403.0 - read(input,9), 2.0) + :math.pow(14.7 - read(input,10), 2.0) + :math.pow(374.43 - read(input,11), 2.0) + :math.pow(1.73 - read(input,12), 2.0))) * 1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(7.67202 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(18.1 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.693 - read(input,4), 2.0) + :math.pow(5.747 - read(input,5), 2.0) + :math.pow(98.9 - read(input,6), 2.0) + :math.pow(1.6334 - read(input,7), 2.0) + :math.pow(24.0 - read(input,8), 2.0) + :math.pow(666.0 - read(input,9), 2.0) + :math.pow(20.2 - read(input,10), 2.0) + :math.pow(393.1 - read(input,11), 2.0) + :math.pow(19.92 - read(input,12), 2.0))) * -1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(2.01019 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(19.58 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.605 - read(input,4), 2.0) + :math.pow(7.929 - read(input,5), 2.0) + :math.pow(96.2 - read(input,6), 2.0) + :math.pow(2.0459 - read(input,7), 2.0) + :math.pow(5.0 - read(input,8), 2.0) + :math.pow(403.0 - read(input,9), 2.0) + :math.pow(14.7 - read(input,10), 2.0) + :math.pow(369.3 - read(input,11), 2.0) + :math.pow(3.7 - read(input,12), 2.0))) * 1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(45.7461 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(18.1 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.693 - read(input,4), 2.0) + :math.pow(4.519 - read(input,5), 2.0) + :math.pow(100.0 - read(input,6), 2.0) + :math.pow(1.6582 - read(input,7), 2.0) + :math.pow(24.0 - read(input,8), 2.0) + :math.pow(666.0 - read(input,9), 2.0) + :math.pow(20.2 - read(input,10), 2.0) + :math.pow(88.27 - read(input,11), 2.0) + :math.pow(36.98 - read(input,12), 2.0))) * -1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(0.03578 - read(input,0), 2.0) + :math.pow(20.0 - read(input,1), 2.0) + :math.pow(3.33 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.4429 - read(input,4), 2.0) + :math.pow(7.82 - read(input,5), 2.0) + :math.pow(64.5 - read(input,6), 2.0) + :math.pow(4.6947 - read(input,7), 2.0) + :math.pow(5.0 - read(input,8), 2.0) + :math.pow(216.0 - read(input,9), 2.0) + :math.pow(14.9 - read(input,10), 2.0) + :math.pow(387.31 - read(input,11), 2.0) + :math.pow(3.76 - read(input,12), 2.0))) * 1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(0.18337 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(27.74 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.609 - read(input,4), 2.0) + :math.pow(5.414 - read(input,5), 2.0) + :math.pow(98.3 - read(input,6), 2.0) + :math.pow(1.7554 - read(input,7), 2.0) + :math.pow(4.0 - read(input,8), 2.0) + :math.pow(711.0 - read(input,9), 2.0) + :math.pow(20.1 - read(input,10), 2.0) + :math.pow(344.05 - read(input,11), 2.0) + :math.pow(23.97 - read(input,12), 2.0))) * -1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(6.53876 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(18.1 - read(input,2), 2.0) + :math.pow(1.0 - read(input,3), 2.0) + :math.pow(0.631 - read(input,4), 2.0) + :math.pow(7.016 - read(input,5), 2.0) + :math.pow(97.5 - read(input,6), 2.0) + :math.pow(1.2024 - read(input,7), 2.0) + :math.pow(24.0 - read(input,8), 2.0) + :math.pow(666.0 - read(input,9), 2.0) + :math.pow(20.2 - read(input,10), 2.0) + :math.pow(392.05 - read(input,11), 2.0) + :math.pow(2.96 - read(input,12), 2.0))) * 1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(1.22358 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(19.58 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.605 - read(input,4), 2.0) + :math.pow(6.943 - read(input,5), 2.0) + :math.pow(97.4 - read(input,6), 2.0) + :math.pow(1.8773 - read(input,7), 2.0) + :math.pow(5.0 - read(input,8), 2.0) + :math.pow(403.0 - read(input,9), 2.0) + :math.pow(14.7 - read(input,10), 2.0) + :math.pow(363.43 - read(input,11), 2.0) + :math.pow(4.59 - read(input,12), 2.0))) * 1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(10.8342 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(18.1 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.679 - read(input,4), 2.0) + :math.pow(6.782 - read(input,5), 2.0) + :math.pow(90.8 - read(input,6), 2.0) + :math.pow(1.8195 - read(input,7), 2.0) + :math.pow(24.0 - read(input,8), 2.0) + :math.pow(666.0 - read(input,9), 2.0) + :math.pow(20.2 - read(input,10), 2.0) + :math.pow(21.57 - read(input,11), 2.0) + :math.pow(25.79 - read(input,12), 2.0))) * -1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(0.98843 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(8.14 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.538 - read(input,4), 2.0) + :math.pow(5.813 - read(input,5), 2.0) + :math.pow(100.0 - read(input,6), 2.0) + :math.pow(4.0952 - read(input,7), 2.0) + :math.pow(4.0 - read(input,8), 2.0) + :math.pow(307.0 - read(input,9), 2.0) + :math.pow(21.0 - read(input,10), 2.0) + :math.pow(394.54 - read(input,11), 2.0) + :math.pow(19.88 - read(input,12), 2.0))) * -1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(18.0846 - read(input,0), 2.0) + :math.pow(0.0 - read(input,1), 2.0) + :math.pow(18.1 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.679 - read(input,4), 2.0) + :math.pow(6.434 - read(input,5), 2.0) + :math.pow(100.0 - read(input,6), 2.0) + :math.pow(1.8347 - read(input,7), 2.0) + :math.pow(24.0 - read(input,8), 2.0) + :math.pow(666.0 - read(input,9), 2.0) + :math.pow(20.2 - read(input,10), 2.0) + :math.pow(27.25 - read(input,11), 2.0) + :math.pow(29.05 - read(input,12), 2.0))) * -1.0 + :math.exp(-0.0000036459736698188483 * (:math.pow(0.0351 - read(input,0), 2.0) + :math.pow(95.0 - read(input,1), 2.0) + :math.pow(2.68 - read(input,2), 2.0) + :math.pow(0.0 - read(input,3), 2.0) + :math.pow(0.4161 - read(input,4), 2.0) + :math.pow(7.853 - read(input,5), 2.0) + :math.pow(33.2 - read(input,6), 2.0) + :math.pow(5.118 - read(input,7), 2.0) + :math.pow(4.0 - read(input,8), 2.0) + :math.pow(224.0 - read(input,9), 2.0) + :math.pow(14.7 - read(input,10), 2.0) + :math.pow(392.78 - read(input,11), 2.0) + :math.pow(3.81 - read(input,12), 2.0))) * 1.0
    end
end
