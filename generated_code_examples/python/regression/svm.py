import numpy as np
def score(input):
    var0 = (0) - (0.07692307692307693)
    return ((((((((((((((((((((((((((((((((((((((((((((((((((((27.02162490523095) + ((np.exp((var0) * (((((((((((((np.power((25.9406) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.679) - (input[4]), 2))) + (np.power((5.304) - (input[5]), 2))) + (np.power((89.1) - (input[6]), 2))) + (np.power((1.6475) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((127.36) - (input[11]), 2))) + (np.power((26.64) - (input[12]), 2))))) * (-0.11849528386764518))) + ((np.exp((var0) * (((((((((((((np.power((6.53876) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((1.0) - (input[3]), 2))) + (np.power((0.631) - (input[4]), 2))) + (np.power((7.016) - (input[5]), 2))) + (np.power((97.5) - (input[6]), 2))) + (np.power((1.2024) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((392.05) - (input[11]), 2))) + (np.power((2.96) - (input[12]), 2))))) * (1.0))) + ((np.exp((var0) * (((((((((((((np.power((22.5971) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.7) - (input[4]), 2))) + (np.power((5.0) - (input[5]), 2))) + (np.power((89.5) - (input[6]), 2))) + (np.power((1.5184) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((396.9) - (input[11]), 2))) + (np.power((31.99) - (input[12]), 2))))) * (-1.0))) + ((np.exp((var0) * (((((((((((((np.power((45.7461) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.693) - (input[4]), 2))) + (np.power((4.519) - (input[5]), 2))) + (np.power((100.0) - (input[6]), 2))) + (np.power((1.6582) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((88.27) - (input[11]), 2))) + (np.power((36.98) - (input[12]), 2))))) * (-1.0))) + ((np.exp((var0) * (((((((((((((np.power((11.8123) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.718) - (input[4]), 2))) + (np.power((6.824) - (input[5]), 2))) + (np.power((76.5) - (input[6]), 2))) + (np.power((1.794) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((48.45) - (input[11]), 2))) + (np.power((22.74) - (input[12]), 2))))) * (-1.0))) + ((np.exp((var0) * (((((((((((((np.power((0.08187) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((2.89) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.445) - (input[4]), 2))) + (np.power((7.82) - (input[5]), 2))) + (np.power((36.9) - (input[6]), 2))) + (np.power((3.4952) - (input[7]), 2))) + (np.power((2.0) - (input[8]), 2))) + (np.power((276.0) - (input[9]), 2))) + (np.power((18.0) - (input[10]), 2))) + (np.power((393.53) - (input[11]), 2))) + (np.power((3.57) - (input[12]), 2))))) * (0.2750000000382897))) + ((np.exp((var0) * (((((((((((((np.power((7.67202) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.693) - (input[4]), 2))) + (np.power((5.747) - (input[5]), 2))) + (np.power((98.9) - (input[6]), 2))) + (np.power((1.6334) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((393.1) - (input[11]), 2))) + (np.power((19.92) - (input[12]), 2))))) * (-1.0))) + ((np.exp((var0) * (((((((((((((np.power((1.46336) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((19.58) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.605) - (input[4]), 2))) + (np.power((7.489) - (input[5]), 2))) + (np.power((90.8) - (input[6]), 2))) + (np.power((1.9709) - (input[7]), 2))) + (np.power((5.0) - (input[8]), 2))) + (np.power((403.0) - (input[9]), 2))) + (np.power((14.7) - (input[10]), 2))) + (np.power((374.43) - (input[11]), 2))) + (np.power((1.73) - (input[12]), 2))))) * (1.0))) + ((np.exp((var0) * (((((((((((((np.power((20.0849) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.7) - (input[4]), 2))) + (np.power((4.368) - (input[5]), 2))) + (np.power((91.2) - (input[6]), 2))) + (np.power((1.4395) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((285.83) - (input[11]), 2))) + (np.power((30.63) - (input[12]), 2))))) * (-1.0))) + ((np.exp((var0) * (((((((((((((np.power((1.83377) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((19.58) - (input[2]), 2))) + (np.power((1.0) - (input[3]), 2))) + (np.power((0.605) - (input[4]), 2))) + (np.power((7.802) - (input[5]), 2))) + (np.power((98.2) - (input[6]), 2))) + (np.power((2.0407) - (input[7]), 2))) + (np.power((5.0) - (input[8]), 2))) + (np.power((403.0) - (input[9]), 2))) + (np.power((14.7) - (input[10]), 2))) + (np.power((389.61) - (input[11]), 2))) + (np.power((1.92) - (input[12]), 2))))) * (1.0))) + ((np.exp((var0) * (((((((((((((np.power((73.5341) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.679) - (input[4]), 2))) + (np.power((5.957) - (input[5]), 2))) + (np.power((100.0) - (input[6]), 2))) + (np.power((1.8026) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((16.45) - (input[11]), 2))) + (np.power((20.62) - (input[12]), 2))))) * (-1.0))) + ((np.exp((var0) * (((((((((((((np.power((0.33147) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((6.2) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.507) - (input[4]), 2))) + (np.power((8.247) - (input[5]), 2))) + (np.power((70.4) - (input[6]), 2))) + (np.power((3.6519) - (input[7]), 2))) + (np.power((8.0) - (input[8]), 2))) + (np.power((307.0) - (input[9]), 2))) + (np.power((17.4) - (input[10]), 2))) + (np.power((378.95) - (input[11]), 2))) + (np.power((3.95) - (input[12]), 2))))) * (1.0))) + ((np.exp((var0) * (((((((((((((np.power((25.0461) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.693) - (input[4]), 2))) + (np.power((5.987) - (input[5]), 2))) + (np.power((100.0) - (input[6]), 2))) + (np.power((1.5888) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((396.9) - (input[11]), 2))) + (np.power((26.77) - (input[12]), 2))))) * (-1.0))) + ((np.exp((var0) * (((((((((((((np.power((0.57834) - (input[0]), 2)) + (np.power((20.0) - (input[1]), 2))) + (np.power((3.97) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.575) - (input[4]), 2))) + (np.power((8.297) - (input[5]), 2))) + (np.power((67.0) - (input[6]), 2))) + (np.power((2.4216) - (input[7]), 2))) + (np.power((5.0) - (input[8]), 2))) + (np.power((264.0) - (input[9]), 2))) + (np.power((13.0) - (input[10]), 2))) + (np.power((384.54) - (input[11]), 2))) + (np.power((7.44) - (input[12]), 2))))) * (1.0))) + ((np.exp((var0) * (((((((((((((np.power((16.8118) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.7) - (input[4]), 2))) + (np.power((5.277) - (input[5]), 2))) + (np.power((98.1) - (input[6]), 2))) + (np.power((1.4261) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((396.9) - (input[11]), 2))) + (np.power((30.81) - (input[12]), 2))))) * (-1.0))) + ((np.exp((var0) * (((((((((((((np.power((0.31533) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((6.2) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.504) - (input[4]), 2))) + (np.power((8.266) - (input[5]), 2))) + (np.power((78.3) - (input[6]), 2))) + (np.power((2.8944) - (input[7]), 2))) + (np.power((8.0) - (input[8]), 2))) + (np.power((307.0) - (input[9]), 2))) + (np.power((17.4) - (input[10]), 2))) + (np.power((385.05) - (input[11]), 2))) + (np.power((4.14) - (input[12]), 2))))) * (1.0))) + ((np.exp((var0) * (((((((((((((np.power((67.9208) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.693) - (input[4]), 2))) + (np.power((5.683) - (input[5]), 2))) + (np.power((100.0) - (input[6]), 2))) + (np.power((1.4254) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((384.97) - (input[11]), 2))) + (np.power((22.98) - (input[12]), 2))))) * (-1.0))) + ((np.exp((var0) * (((((((((((((np.power((0.18337) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((27.74) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.609) - (input[4]), 2))) + (np.power((5.414) - (input[5]), 2))) + (np.power((98.3) - (input[6]), 2))) + (np.power((1.7554) - (input[7]), 2))) + (np.power((4.0) - (input[8]), 2))) + (np.power((711.0) - (input[9]), 2))) + (np.power((20.1) - (input[10]), 2))) + (np.power((344.05) - (input[11]), 2))) + (np.power((23.97) - (input[12]), 2))))) * (-1.0))) + ((np.exp((var0) * (((((((((((((np.power((14.3337) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.7) - (input[4]), 2))) + (np.power((4.88) - (input[5]), 2))) + (np.power((100.0) - (input[6]), 2))) + (np.power((1.5895) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((372.92) - (input[11]), 2))) + (np.power((30.62) - (input[12]), 2))))) * (-0.3179880503820858))) + ((np.exp((var0) * (((((((((((((np.power((0.20746) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((27.74) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.609) - (input[4]), 2))) + (np.power((5.093) - (input[5]), 2))) + (np.power((98.0) - (input[6]), 2))) + (np.power((1.8226) - (input[7]), 2))) + (np.power((4.0) - (input[8]), 2))) + (np.power((711.0) - (input[9]), 2))) + (np.power((20.1) - (input[10]), 2))) + (np.power((318.43) - (input[11]), 2))) + (np.power((29.68) - (input[12]), 2))))) * (-1.0))) + ((np.exp((var0) * (((((((((((((np.power((41.5292) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.693) - (input[4]), 2))) + (np.power((5.531) - (input[5]), 2))) + (np.power((85.4) - (input[6]), 2))) + (np.power((1.6074) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((329.46) - (input[11]), 2))) + (np.power((27.38) - (input[12]), 2))))) * (-1.0))) + ((np.exp((var0) * (((((((((((((np.power((1.51902) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((19.58) - (input[2]), 2))) + (np.power((1.0) - (input[3]), 2))) + (np.power((0.605) - (input[4]), 2))) + (np.power((8.375) - (input[5]), 2))) + (np.power((93.9) - (input[6]), 2))) + (np.power((2.162) - (input[7]), 2))) + (np.power((5.0) - (input[8]), 2))) + (np.power((403.0) - (input[9]), 2))) + (np.power((14.7) - (input[10]), 2))) + (np.power((388.45) - (input[11]), 2))) + (np.power((3.32) - (input[12]), 2))))) * (1.0))) + ((np.exp((var0) * (((((((((((((np.power((11.5779) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.7) - (input[4]), 2))) + (np.power((5.036) - (input[5]), 2))) + (np.power((97.0) - (input[6]), 2))) + (np.power((1.77) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((396.9) - (input[11]), 2))) + (np.power((25.68) - (input[12]), 2))))) * (-0.7698794401926943))) + ((np.exp((var0) * (((((((((((((np.power((14.2362) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.693) - (input[4]), 2))) + (np.power((6.343) - (input[5]), 2))) + (np.power((100.0) - (input[6]), 2))) + (np.power((1.5741) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((396.9) - (input[11]), 2))) + (np.power((20.32) - (input[12]), 2))))) * (-1.0))) + ((np.exp((var0) * (((((((((((((np.power((9.2323) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.631) - (input[4]), 2))) + (np.power((6.216) - (input[5]), 2))) + (np.power((100.0) - (input[6]), 2))) + (np.power((1.1691) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((366.15) - (input[11]), 2))) + (np.power((9.53) - (input[12]), 2))))) * (1.0))) + ((np.exp((var0) * (((((((((((((np.power((9.91655) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.693) - (input[4]), 2))) + (np.power((5.852) - (input[5]), 2))) + (np.power((77.8) - (input[6]), 2))) + (np.power((1.5004) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((338.16) - (input[11]), 2))) + (np.power((29.97) - (input[12]), 2))))) * (-1.0))) + ((np.exp((var0) * (((((((((((((np.power((22.0511) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.74) - (input[4]), 2))) + (np.power((5.818) - (input[5]), 2))) + (np.power((92.4) - (input[6]), 2))) + (np.power((1.8662) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((391.45) - (input[11]), 2))) + (np.power((22.11) - (input[12]), 2))))) * (-0.017541052270521836))) + ((np.exp((var0) * (((((((((((((np.power((0.61154) - (input[0]), 2)) + (np.power((20.0) - (input[1]), 2))) + (np.power((3.97) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.647) - (input[4]), 2))) + (np.power((8.704) - (input[5]), 2))) + (np.power((86.9) - (input[6]), 2))) + (np.power((1.801) - (input[7]), 2))) + (np.power((5.0) - (input[8]), 2))) + (np.power((264.0) - (input[9]), 2))) + (np.power((13.0) - (input[10]), 2))) + (np.power((389.7) - (input[11]), 2))) + (np.power((5.12) - (input[12]), 2))))) * (1.0))) + ((np.exp((var0) * (((((((((((((np.power((10.8342) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.679) - (input[4]), 2))) + (np.power((6.782) - (input[5]), 2))) + (np.power((90.8) - (input[6]), 2))) + (np.power((1.8195) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((21.57) - (input[11]), 2))) + (np.power((25.79) - (input[12]), 2))))) * (-1.0))) + ((np.exp((var0) * (((((((((((((np.power((15.8603) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.679) - (input[4]), 2))) + (np.power((5.896) - (input[5]), 2))) + (np.power((95.4) - (input[6]), 2))) + (np.power((1.9096) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((7.68) - (input[11]), 2))) + (np.power((24.39) - (input[12]), 2))))) * (-1.0))) + ((np.exp((var0) * (((((((((((((np.power((17.8667) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.671) - (input[4]), 2))) + (np.power((6.223) - (input[5]), 2))) + (np.power((100.0) - (input[6]), 2))) + (np.power((1.3861) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((393.74) - (input[11]), 2))) + (np.power((21.78) - (input[12]), 2))))) * (-0.17127153707291753))) + ((np.exp((var0) * (((((((((((((np.power((8.26725) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((1.0) - (input[3]), 2))) + (np.power((0.668) - (input[4]), 2))) + (np.power((5.875) - (input[5]), 2))) + (np.power((89.6) - (input[6]), 2))) + (np.power((1.1296) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((347.88) - (input[11]), 2))) + (np.power((8.88) - (input[12]), 2))))) * (1.0))) + ((np.exp((var0) * (((((((((((((np.power((0.52693) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((6.2) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.504) - (input[4]), 2))) + (np.power((8.725) - (input[5]), 2))) + (np.power((83.0) - (input[6]), 2))) + (np.power((2.8944) - (input[7]), 2))) + (np.power((8.0) - (input[8]), 2))) + (np.power((307.0) - (input[9]), 2))) + (np.power((17.4) - (input[10]), 2))) + (np.power((382.0) - (input[11]), 2))) + (np.power((4.63) - (input[12]), 2))))) * (1.0))) + ((np.exp((var0) * (((((((((((((np.power((0.0351) - (input[0]), 2)) + (np.power((95.0) - (input[1]), 2))) + (np.power((2.68) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.4161) - (input[4]), 2))) + (np.power((7.853) - (input[5]), 2))) + (np.power((33.2) - (input[6]), 2))) + (np.power((5.118) - (input[7]), 2))) + (np.power((4.0) - (input[8]), 2))) + (np.power((224.0) - (input[9]), 2))) + (np.power((14.7) - (input[10]), 2))) + (np.power((392.78) - (input[11]), 2))) + (np.power((3.81) - (input[12]), 2))))) * (1.0))) + ((np.exp((var0) * (((((((((((((np.power((12.2472) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.584) - (input[4]), 2))) + (np.power((5.837) - (input[5]), 2))) + (np.power((59.7) - (input[6]), 2))) + (np.power((1.9976) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((24.65) - (input[11]), 2))) + (np.power((15.69) - (input[12]), 2))))) * (-0.31798805038208666))) + ((np.exp((var0) * (((((((((((((np.power((14.4208) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.74) - (input[4]), 2))) + (np.power((6.461) - (input[5]), 2))) + (np.power((93.3) - (input[6]), 2))) + (np.power((2.0026) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((27.49) - (input[11]), 2))) + (np.power((18.05) - (input[12]), 2))))) * (-0.9183413019645936))) + ((np.exp((var0) * (((((((((((((np.power((0.29819) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((6.2) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.504) - (input[4]), 2))) + (np.power((7.686) - (input[5]), 2))) + (np.power((17.0) - (input[6]), 2))) + (np.power((3.3751) - (input[7]), 2))) + (np.power((8.0) - (input[8]), 2))) + (np.power((307.0) - (input[9]), 2))) + (np.power((17.4) - (input[10]), 2))) + (np.power((377.51) - (input[11]), 2))) + (np.power((3.92) - (input[12]), 2))))) * (1.0))) + ((np.exp((var0) * (((((((((((((np.power((38.3518) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.693) - (input[4]), 2))) + (np.power((5.453) - (input[5]), 2))) + (np.power((100.0) - (input[6]), 2))) + (np.power((1.4896) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((396.9) - (input[11]), 2))) + (np.power((30.59) - (input[12]), 2))))) * (-1.0))) + ((np.exp((var0) * (((((((((((((np.power((0.06129) - (input[0]), 2)) + (np.power((20.0) - (input[1]), 2))) + (np.power((3.33) - (input[2]), 2))) + (np.power((1.0) - (input[3]), 2))) + (np.power((0.4429) - (input[4]), 2))) + (np.power((7.645) - (input[5]), 2))) + (np.power((49.7) - (input[6]), 2))) + (np.power((5.2119) - (input[7]), 2))) + (np.power((5.0) - (input[8]), 2))) + (np.power((216.0) - (input[9]), 2))) + (np.power((14.9) - (input[10]), 2))) + (np.power((377.07) - (input[11]), 2))) + (np.power((3.01) - (input[12]), 2))))) * (1.0))) + ((np.exp((var0) * (((((((((((((np.power((88.9762) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.671) - (input[4]), 2))) + (np.power((6.968) - (input[5]), 2))) + (np.power((91.9) - (input[6]), 2))) + (np.power((1.4165) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((396.9) - (input[11]), 2))) + (np.power((17.21) - (input[12]), 2))))) * (-0.11849528386764341))) + ((np.exp((var0) * (((((((((((((np.power((0.05602) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((2.46) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.488) - (input[4]), 2))) + (np.power((7.831) - (input[5]), 2))) + (np.power((53.6) - (input[6]), 2))) + (np.power((3.1992) - (input[7]), 2))) + (np.power((3.0) - (input[8]), 2))) + (np.power((193.0) - (input[9]), 2))) + (np.power((17.8) - (input[10]), 2))) + (np.power((392.63) - (input[11]), 2))) + (np.power((4.45) - (input[12]), 2))))) * (1.0))) + ((np.exp((var0) * (((((((((((((np.power((0.01501) - (input[0]), 2)) + (np.power((90.0) - (input[1]), 2))) + (np.power((1.21) - (input[2]), 2))) + (np.power((1.0) - (input[3]), 2))) + (np.power((0.401) - (input[4]), 2))) + (np.power((7.923) - (input[5]), 2))) + (np.power((24.8) - (input[6]), 2))) + (np.power((5.885) - (input[7]), 2))) + (np.power((1.0) - (input[8]), 2))) + (np.power((198.0) - (input[9]), 2))) + (np.power((13.6) - (input[10]), 2))) + (np.power((395.52) - (input[11]), 2))) + (np.power((3.16) - (input[12]), 2))))) * (1.0))) + ((np.exp((var0) * (((((((((((((np.power((0.02009) - (input[0]), 2)) + (np.power((95.0) - (input[1]), 2))) + (np.power((2.68) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.4161) - (input[4]), 2))) + (np.power((8.034) - (input[5]), 2))) + (np.power((31.9) - (input[6]), 2))) + (np.power((5.118) - (input[7]), 2))) + (np.power((4.0) - (input[8]), 2))) + (np.power((224.0) - (input[9]), 2))) + (np.power((14.7) - (input[10]), 2))) + (np.power((390.55) - (input[11]), 2))) + (np.power((2.88) - (input[12]), 2))))) * (1.0))) + ((np.exp((var0) * (((((((((((((np.power((15.1772) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.74) - (input[4]), 2))) + (np.power((6.152) - (input[5]), 2))) + (np.power((100.0) - (input[6]), 2))) + (np.power((1.9142) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((9.32) - (input[11]), 2))) + (np.power((26.45) - (input[12]), 2))))) * (-1.0))) + ((np.exp((var0) * (((((((((((((np.power((18.0846) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.679) - (input[4]), 2))) + (np.power((6.434) - (input[5]), 2))) + (np.power((100.0) - (input[6]), 2))) + (np.power((1.8347) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((27.25) - (input[11]), 2))) + (np.power((29.05) - (input[12]), 2))))) * (-1.0))) + ((np.exp((var0) * (((((((((((((np.power((0.01381) - (input[0]), 2)) + (np.power((80.0) - (input[1]), 2))) + (np.power((0.46) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.422) - (input[4]), 2))) + (np.power((7.875) - (input[5]), 2))) + (np.power((32.0) - (input[6]), 2))) + (np.power((5.6484) - (input[7]), 2))) + (np.power((4.0) - (input[8]), 2))) + (np.power((255.0) - (input[9]), 2))) + (np.power((14.4) - (input[10]), 2))) + (np.power((394.23) - (input[11]), 2))) + (np.power((2.97) - (input[12]), 2))))) * (1.0))) + ((np.exp((var0) * (((((((((((((np.power((5.66998) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((1.0) - (input[3]), 2))) + (np.power((0.631) - (input[4]), 2))) + (np.power((6.683) - (input[5]), 2))) + (np.power((96.8) - (input[6]), 2))) + (np.power((1.3567) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((375.33) - (input[11]), 2))) + (np.power((3.73) - (input[12]), 2))))) * (1.0))) + ((np.exp((var0) * (((((((((((((np.power((0.01538) - (input[0]), 2)) + (np.power((90.0) - (input[1]), 2))) + (np.power((3.75) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.394) - (input[4]), 2))) + (np.power((7.454) - (input[5]), 2))) + (np.power((34.2) - (input[6]), 2))) + (np.power((6.3361) - (input[7]), 2))) + (np.power((3.0) - (input[8]), 2))) + (np.power((244.0) - (input[9]), 2))) + (np.power((15.9) - (input[10]), 2))) + (np.power((386.34) - (input[11]), 2))) + (np.power((3.11) - (input[12]), 2))))) * (0.47499999996189857))) + ((np.exp((var0) * (((((((((((((np.power((4.89822) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.631) - (input[4]), 2))) + (np.power((4.97) - (input[5]), 2))) + (np.power((100.0) - (input[6]), 2))) + (np.power((1.3325) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((375.52) - (input[11]), 2))) + (np.power((3.26) - (input[12]), 2))))) * (1.0))) + ((np.exp((var0) * (((((((((((((np.power((2.01019) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((19.58) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.605) - (input[4]), 2))) + (np.power((7.929) - (input[5]), 2))) + (np.power((96.2) - (input[6]), 2))) + (np.power((2.0459) - (input[7]), 2))) + (np.power((5.0) - (input[8]), 2))) + (np.power((403.0) - (input[9]), 2))) + (np.power((14.7) - (input[10]), 2))) + (np.power((369.3) - (input[11]), 2))) + (np.power((3.7) - (input[12]), 2))))) * (1.0))) + ((np.exp((var0) * (((((((((((((np.power((0.52014) - (input[0]), 2)) + (np.power((20.0) - (input[1]), 2))) + (np.power((3.97) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.647) - (input[4]), 2))) + (np.power((8.398) - (input[5]), 2))) + (np.power((91.5) - (input[6]), 2))) + (np.power((2.2885) - (input[7]), 2))) + (np.power((5.0) - (input[8]), 2))) + (np.power((264.0) - (input[9]), 2))) + (np.power((13.0) - (input[10]), 2))) + (np.power((386.86) - (input[11]), 2))) + (np.power((5.91) - (input[12]), 2))))) * (1.0))) + ((np.exp((var0) * (((((((((((((np.power((9.33889) - (input[0]), 2)) + (np.power((0.0) - (input[1]), 2))) + (np.power((18.1) - (input[2]), 2))) + (np.power((0.0) - (input[3]), 2))) + (np.power((0.679) - (input[4]), 2))) + (np.power((6.38) - (input[5]), 2))) + (np.power((95.6) - (input[6]), 2))) + (np.power((1.9682) - (input[7]), 2))) + (np.power((24.0) - (input[8]), 2))) + (np.power((666.0) - (input[9]), 2))) + (np.power((20.2) - (input[10]), 2))) + (np.power((60.72) - (input[11]), 2))) + (np.power((24.08) - (input[12]), 2))))) * (-1.0))
