function score(input) {
    return 25.346480984077544 + Math.exp(-0.0000036459736698188483 * (Math.pow(16.8118 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(18.1 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.7 - input[4], 2.0) + Math.pow(5.277 - input[5], 2.0) + Math.pow(98.1 - input[6], 2.0) + Math.pow(1.4261 - input[7], 2.0) + Math.pow(24.0 - input[8], 2.0) + Math.pow(666.0 - input[9], 2.0) + Math.pow(20.2 - input[10], 2.0) + Math.pow(396.9 - input[11], 2.0) + Math.pow(30.81 - input[12], 2.0))) * -1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(38.3518 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(18.1 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.693 - input[4], 2.0) + Math.pow(5.453 - input[5], 2.0) + Math.pow(100.0 - input[6], 2.0) + Math.pow(1.4896 - input[7], 2.0) + Math.pow(24.0 - input[8], 2.0) + Math.pow(666.0 - input[9], 2.0) + Math.pow(20.2 - input[10], 2.0) + Math.pow(396.9 - input[11], 2.0) + Math.pow(30.59 - input[12], 2.0))) * -1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(0.84054 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(8.14 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.538 - input[4], 2.0) + Math.pow(5.599 - input[5], 2.0) + Math.pow(85.7 - input[6], 2.0) + Math.pow(4.4546 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(307.0 - input[9], 2.0) + Math.pow(21.0 - input[10], 2.0) + Math.pow(303.42 - input[11], 2.0) + Math.pow(16.51 - input[12], 2.0))) * -1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(1.15172 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(8.14 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.538 - input[4], 2.0) + Math.pow(5.701 - input[5], 2.0) + Math.pow(95.0 - input[6], 2.0) + Math.pow(3.7872 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(307.0 - input[9], 2.0) + Math.pow(21.0 - input[10], 2.0) + Math.pow(358.77 - input[11], 2.0) + Math.pow(18.35 - input[12], 2.0))) * -1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(24.8017 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(18.1 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.693 - input[4], 2.0) + Math.pow(5.349 - input[5], 2.0) + Math.pow(96.0 - input[6], 2.0) + Math.pow(1.7028 - input[7], 2.0) + Math.pow(24.0 - input[8], 2.0) + Math.pow(666.0 - input[9], 2.0) + Math.pow(20.2 - input[10], 2.0) + Math.pow(396.9 - input[11], 2.0) + Math.pow(19.77 - input[12], 2.0))) * -1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(41.5292 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(18.1 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.693 - input[4], 2.0) + Math.pow(5.531 - input[5], 2.0) + Math.pow(85.4 - input[6], 2.0) + Math.pow(1.6074 - input[7], 2.0) + Math.pow(24.0 - input[8], 2.0) + Math.pow(666.0 - input[9], 2.0) + Math.pow(20.2 - input[10], 2.0) + Math.pow(329.46 - input[11], 2.0) + Math.pow(27.38 - input[12], 2.0))) * -0.3490103966325617 + Math.exp(-0.0000036459736698188483 * (Math.pow(0.38735 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(25.65 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.581 - input[4], 2.0) + Math.pow(5.613 - input[5], 2.0) + Math.pow(95.6 - input[6], 2.0) + Math.pow(1.7572 - input[7], 2.0) + Math.pow(2.0 - input[8], 2.0) + Math.pow(188.0 - input[9], 2.0) + Math.pow(19.1 - input[10], 2.0) + Math.pow(359.29 - input[11], 2.0) + Math.pow(27.26 - input[12], 2.0))) * -1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(0.05602 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(2.46 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.488 - input[4], 2.0) + Math.pow(7.831 - input[5], 2.0) + Math.pow(53.6 - input[6], 2.0) + Math.pow(3.1992 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(193.0 - input[9], 2.0) + Math.pow(17.8 - input[10], 2.0) + Math.pow(392.63 - input[11], 2.0) + Math.pow(4.45 - input[12], 2.0))) * 1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(25.0461 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(18.1 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.693 - input[4], 2.0) + Math.pow(5.987 - input[5], 2.0) + Math.pow(100.0 - input[6], 2.0) + Math.pow(1.5888 - input[7], 2.0) + Math.pow(24.0 - input[8], 2.0) + Math.pow(666.0 - input[9], 2.0) + Math.pow(20.2 - input[10], 2.0) + Math.pow(396.9 - input[11], 2.0) + Math.pow(26.77 - input[12], 2.0))) * -1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(8.26725 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(18.1 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(0.668 - input[4], 2.0) + Math.pow(5.875 - input[5], 2.0) + Math.pow(89.6 - input[6], 2.0) + Math.pow(1.1296 - input[7], 2.0) + Math.pow(24.0 - input[8], 2.0) + Math.pow(666.0 - input[9], 2.0) + Math.pow(20.2 - input[10], 2.0) + Math.pow(347.88 - input[11], 2.0) + Math.pow(8.88 - input[12], 2.0))) * 1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(5.66998 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(18.1 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(0.631 - input[4], 2.0) + Math.pow(6.683 - input[5], 2.0) + Math.pow(96.8 - input[6], 2.0) + Math.pow(1.3567 - input[7], 2.0) + Math.pow(24.0 - input[8], 2.0) + Math.pow(666.0 - input[9], 2.0) + Math.pow(20.2 - input[10], 2.0) + Math.pow(375.33 - input[11], 2.0) + Math.pow(3.73 - input[12], 2.0))) * 1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(1.51902 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(19.58 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(0.605 - input[4], 2.0) + Math.pow(8.375 - input[5], 2.0) + Math.pow(93.9 - input[6], 2.0) + Math.pow(2.162 - input[7], 2.0) + Math.pow(5.0 - input[8], 2.0) + Math.pow(403.0 - input[9], 2.0) + Math.pow(14.7 - input[10], 2.0) + Math.pow(388.45 - input[11], 2.0) + Math.pow(3.32 - input[12], 2.0))) * 1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(0.29819 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(6.2 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.504 - input[4], 2.0) + Math.pow(7.686 - input[5], 2.0) + Math.pow(17.0 - input[6], 2.0) + Math.pow(3.3751 - input[7], 2.0) + Math.pow(8.0 - input[8], 2.0) + Math.pow(307.0 - input[9], 2.0) + Math.pow(17.4 - input[10], 2.0) + Math.pow(377.51 - input[11], 2.0) + Math.pow(3.92 - input[12], 2.0))) * 1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(3.32105 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(19.58 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(0.871 - input[4], 2.0) + Math.pow(5.403 - input[5], 2.0) + Math.pow(100.0 - input[6], 2.0) + Math.pow(1.3216 - input[7], 2.0) + Math.pow(5.0 - input[8], 2.0) + Math.pow(403.0 - input[9], 2.0) + Math.pow(14.7 - input[10], 2.0) + Math.pow(396.9 - input[11], 2.0) + Math.pow(26.82 - input[12], 2.0))) * -0.400989603367655 + Math.exp(-0.0000036459736698188483 * (Math.pow(0.61154 - input[0], 2.0) + Math.pow(20.0 - input[1], 2.0) + Math.pow(3.97 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.647 - input[4], 2.0) + Math.pow(8.704 - input[5], 2.0) + Math.pow(86.9 - input[6], 2.0) + Math.pow(1.801 - input[7], 2.0) + Math.pow(5.0 - input[8], 2.0) + Math.pow(264.0 - input[9], 2.0) + Math.pow(13.0 - input[10], 2.0) + Math.pow(389.7 - input[11], 2.0) + Math.pow(5.12 - input[12], 2.0))) * 1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(0.02009 - input[0], 2.0) + Math.pow(95.0 - input[1], 2.0) + Math.pow(2.68 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.4161 - input[4], 2.0) + Math.pow(8.034 - input[5], 2.0) + Math.pow(31.9 - input[6], 2.0) + Math.pow(5.118 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(224.0 - input[9], 2.0) + Math.pow(14.7 - input[10], 2.0) + Math.pow(390.55 - input[11], 2.0) + Math.pow(2.88 - input[12], 2.0))) * 1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(0.08187 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(2.89 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.445 - input[4], 2.0) + Math.pow(7.82 - input[5], 2.0) + Math.pow(36.9 - input[6], 2.0) + Math.pow(3.4952 - input[7], 2.0) + Math.pow(2.0 - input[8], 2.0) + Math.pow(276.0 - input[9], 2.0) + Math.pow(18.0 - input[10], 2.0) + Math.pow(393.53 - input[11], 2.0) + Math.pow(3.57 - input[12], 2.0))) * 1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(0.57834 - input[0], 2.0) + Math.pow(20.0 - input[1], 2.0) + Math.pow(3.97 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.575 - input[4], 2.0) + Math.pow(8.297 - input[5], 2.0) + Math.pow(67.0 - input[6], 2.0) + Math.pow(2.4216 - input[7], 2.0) + Math.pow(5.0 - input[8], 2.0) + Math.pow(264.0 - input[9], 2.0) + Math.pow(13.0 - input[10], 2.0) + Math.pow(384.54 - input[11], 2.0) + Math.pow(7.44 - input[12], 2.0))) * 1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(1.35472 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(8.14 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.538 - input[4], 2.0) + Math.pow(6.072 - input[5], 2.0) + Math.pow(100.0 - input[6], 2.0) + Math.pow(4.175 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(307.0 - input[9], 2.0) + Math.pow(21.0 - input[10], 2.0) + Math.pow(376.73 - input[11], 2.0) + Math.pow(13.04 - input[12], 2.0))) * -1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(0.52693 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(6.2 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.504 - input[4], 2.0) + Math.pow(8.725 - input[5], 2.0) + Math.pow(83.0 - input[6], 2.0) + Math.pow(2.8944 - input[7], 2.0) + Math.pow(8.0 - input[8], 2.0) + Math.pow(307.0 - input[9], 2.0) + Math.pow(17.4 - input[10], 2.0) + Math.pow(382.0 - input[11], 2.0) + Math.pow(4.63 - input[12], 2.0))) * 1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(0.33147 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(6.2 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.507 - input[4], 2.0) + Math.pow(8.247 - input[5], 2.0) + Math.pow(70.4 - input[6], 2.0) + Math.pow(3.6519 - input[7], 2.0) + Math.pow(8.0 - input[8], 2.0) + Math.pow(307.0 - input[9], 2.0) + Math.pow(17.4 - input[10], 2.0) + Math.pow(378.95 - input[11], 2.0) + Math.pow(3.95 - input[12], 2.0))) * 1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(1.13081 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(8.14 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.538 - input[4], 2.0) + Math.pow(5.713 - input[5], 2.0) + Math.pow(94.1 - input[6], 2.0) + Math.pow(4.233 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(307.0 - input[9], 2.0) + Math.pow(21.0 - input[10], 2.0) + Math.pow(360.17 - input[11], 2.0) + Math.pow(22.6 - input[12], 2.0))) * -1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(4.89822 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(18.1 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.631 - input[4], 2.0) + Math.pow(4.97 - input[5], 2.0) + Math.pow(100.0 - input[6], 2.0) + Math.pow(1.3325 - input[7], 2.0) + Math.pow(24.0 - input[8], 2.0) + Math.pow(666.0 - input[9], 2.0) + Math.pow(20.2 - input[10], 2.0) + Math.pow(375.52 - input[11], 2.0) + Math.pow(3.26 - input[12], 2.0))) * 1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(1.25179 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(8.14 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.538 - input[4], 2.0) + Math.pow(5.57 - input[5], 2.0) + Math.pow(98.1 - input[6], 2.0) + Math.pow(3.7979 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(307.0 - input[9], 2.0) + Math.pow(21.0 - input[10], 2.0) + Math.pow(376.57 - input[11], 2.0) + Math.pow(21.02 - input[12], 2.0))) * -1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(0.06129 - input[0], 2.0) + Math.pow(20.0 - input[1], 2.0) + Math.pow(3.33 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(0.4429 - input[4], 2.0) + Math.pow(7.645 - input[5], 2.0) + Math.pow(49.7 - input[6], 2.0) + Math.pow(5.2119 - input[7], 2.0) + Math.pow(5.0 - input[8], 2.0) + Math.pow(216.0 - input[9], 2.0) + Math.pow(14.9 - input[10], 2.0) + Math.pow(377.07 - input[11], 2.0) + Math.pow(3.01 - input[12], 2.0))) * 1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(9.2323 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(18.1 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.631 - input[4], 2.0) + Math.pow(6.216 - input[5], 2.0) + Math.pow(100.0 - input[6], 2.0) + Math.pow(1.1691 - input[7], 2.0) + Math.pow(24.0 - input[8], 2.0) + Math.pow(666.0 - input[9], 2.0) + Math.pow(20.2 - input[10], 2.0) + Math.pow(366.15 - input[11], 2.0) + Math.pow(9.53 - input[12], 2.0))) * 1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(2.77974 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(19.58 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.871 - input[4], 2.0) + Math.pow(4.903 - input[5], 2.0) + Math.pow(97.8 - input[6], 2.0) + Math.pow(1.3459 - input[7], 2.0) + Math.pow(5.0 - input[8], 2.0) + Math.pow(403.0 - input[9], 2.0) + Math.pow(14.7 - input[10], 2.0) + Math.pow(396.9 - input[11], 2.0) + Math.pow(29.29 - input[12], 2.0))) * -1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(0.01381 - input[0], 2.0) + Math.pow(80.0 - input[1], 2.0) + Math.pow(0.46 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.422 - input[4], 2.0) + Math.pow(7.875 - input[5], 2.0) + Math.pow(32.0 - input[6], 2.0) + Math.pow(5.6484 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(255.0 - input[9], 2.0) + Math.pow(14.4 - input[10], 2.0) + Math.pow(394.23 - input[11], 2.0) + Math.pow(2.97 - input[12], 2.0))) * 1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(0.01538 - input[0], 2.0) + Math.pow(90.0 - input[1], 2.0) + Math.pow(3.75 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.394 - input[4], 2.0) + Math.pow(7.454 - input[5], 2.0) + Math.pow(34.2 - input[6], 2.0) + Math.pow(6.3361 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(244.0 - input[9], 2.0) + Math.pow(15.9 - input[10], 2.0) + Math.pow(386.34 - input[11], 2.0) + Math.pow(3.11 - input[12], 2.0))) * 0.7500000000002167 + Math.exp(-0.0000036459736698188483 * (Math.pow(1.38799 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(8.14 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.538 - input[4], 2.0) + Math.pow(5.95 - input[5], 2.0) + Math.pow(82.0 - input[6], 2.0) + Math.pow(3.99 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(307.0 - input[9], 2.0) + Math.pow(21.0 - input[10], 2.0) + Math.pow(232.6 - input[11], 2.0) + Math.pow(27.71 - input[12], 2.0))) * -1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(1.83377 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(19.58 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(0.605 - input[4], 2.0) + Math.pow(7.802 - input[5], 2.0) + Math.pow(98.2 - input[6], 2.0) + Math.pow(2.0407 - input[7], 2.0) + Math.pow(5.0 - input[8], 2.0) + Math.pow(403.0 - input[9], 2.0) + Math.pow(14.7 - input[10], 2.0) + Math.pow(389.61 - input[11], 2.0) + Math.pow(1.92 - input[12], 2.0))) * 1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(0.31533 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(6.2 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.504 - input[4], 2.0) + Math.pow(8.266 - input[5], 2.0) + Math.pow(78.3 - input[6], 2.0) + Math.pow(2.8944 - input[7], 2.0) + Math.pow(8.0 - input[8], 2.0) + Math.pow(307.0 - input[9], 2.0) + Math.pow(17.4 - input[10], 2.0) + Math.pow(385.05 - input[11], 2.0) + Math.pow(4.14 - input[12], 2.0))) * 1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(9.91655 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(18.1 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.693 - input[4], 2.0) + Math.pow(5.852 - input[5], 2.0) + Math.pow(77.8 - input[6], 2.0) + Math.pow(1.5004 - input[7], 2.0) + Math.pow(24.0 - input[8], 2.0) + Math.pow(666.0 - input[9], 2.0) + Math.pow(20.2 - input[10], 2.0) + Math.pow(338.16 - input[11], 2.0) + Math.pow(29.97 - input[12], 2.0))) * -1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(0.01501 - input[0], 2.0) + Math.pow(90.0 - input[1], 2.0) + Math.pow(1.21 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(0.401 - input[4], 2.0) + Math.pow(7.923 - input[5], 2.0) + Math.pow(24.8 - input[6], 2.0) + Math.pow(5.885 - input[7], 2.0) + Math.pow(1.0 - input[8], 2.0) + Math.pow(198.0 - input[9], 2.0) + Math.pow(13.6 - input[10], 2.0) + Math.pow(395.52 - input[11], 2.0) + Math.pow(3.16 - input[12], 2.0))) * 1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(0.25387 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(6.91 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.448 - input[4], 2.0) + Math.pow(5.399 - input[5], 2.0) + Math.pow(95.3 - input[6], 2.0) + Math.pow(5.87 - input[7], 2.0) + Math.pow(3.0 - input[8], 2.0) + Math.pow(233.0 - input[9], 2.0) + Math.pow(17.9 - input[10], 2.0) + Math.pow(396.9 - input[11], 2.0) + Math.pow(30.81 - input[12], 2.0))) * -1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(14.2362 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(18.1 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.693 - input[4], 2.0) + Math.pow(6.343 - input[5], 2.0) + Math.pow(100.0 - input[6], 2.0) + Math.pow(1.5741 - input[7], 2.0) + Math.pow(24.0 - input[8], 2.0) + Math.pow(666.0 - input[9], 2.0) + Math.pow(20.2 - input[10], 2.0) + Math.pow(396.9 - input[11], 2.0) + Math.pow(20.32 - input[12], 2.0))) * -1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(22.5971 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(18.1 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.7 - input[4], 2.0) + Math.pow(5.0 - input[5], 2.0) + Math.pow(89.5 - input[6], 2.0) + Math.pow(1.5184 - input[7], 2.0) + Math.pow(24.0 - input[8], 2.0) + Math.pow(666.0 - input[9], 2.0) + Math.pow(20.2 - input[10], 2.0) + Math.pow(396.9 - input[11], 2.0) + Math.pow(31.99 - input[12], 2.0))) * -1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(67.9208 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(18.1 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.693 - input[4], 2.0) + Math.pow(5.683 - input[5], 2.0) + Math.pow(100.0 - input[6], 2.0) + Math.pow(1.4254 - input[7], 2.0) + Math.pow(24.0 - input[8], 2.0) + Math.pow(666.0 - input[9], 2.0) + Math.pow(20.2 - input[10], 2.0) + Math.pow(384.97 - input[11], 2.0) + Math.pow(22.98 - input[12], 2.0))) * -1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(1.61282 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(8.14 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.538 - input[4], 2.0) + Math.pow(6.096 - input[5], 2.0) + Math.pow(96.9 - input[6], 2.0) + Math.pow(3.7598 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(307.0 - input[9], 2.0) + Math.pow(21.0 - input[10], 2.0) + Math.pow(248.31 - input[11], 2.0) + Math.pow(20.34 - input[12], 2.0))) * -1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(1.46336 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(19.58 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.605 - input[4], 2.0) + Math.pow(7.489 - input[5], 2.0) + Math.pow(90.8 - input[6], 2.0) + Math.pow(1.9709 - input[7], 2.0) + Math.pow(5.0 - input[8], 2.0) + Math.pow(403.0 - input[9], 2.0) + Math.pow(14.7 - input[10], 2.0) + Math.pow(374.43 - input[11], 2.0) + Math.pow(1.73 - input[12], 2.0))) * 1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(7.67202 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(18.1 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.693 - input[4], 2.0) + Math.pow(5.747 - input[5], 2.0) + Math.pow(98.9 - input[6], 2.0) + Math.pow(1.6334 - input[7], 2.0) + Math.pow(24.0 - input[8], 2.0) + Math.pow(666.0 - input[9], 2.0) + Math.pow(20.2 - input[10], 2.0) + Math.pow(393.1 - input[11], 2.0) + Math.pow(19.92 - input[12], 2.0))) * -1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(2.01019 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(19.58 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.605 - input[4], 2.0) + Math.pow(7.929 - input[5], 2.0) + Math.pow(96.2 - input[6], 2.0) + Math.pow(2.0459 - input[7], 2.0) + Math.pow(5.0 - input[8], 2.0) + Math.pow(403.0 - input[9], 2.0) + Math.pow(14.7 - input[10], 2.0) + Math.pow(369.3 - input[11], 2.0) + Math.pow(3.7 - input[12], 2.0))) * 1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(45.7461 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(18.1 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.693 - input[4], 2.0) + Math.pow(4.519 - input[5], 2.0) + Math.pow(100.0 - input[6], 2.0) + Math.pow(1.6582 - input[7], 2.0) + Math.pow(24.0 - input[8], 2.0) + Math.pow(666.0 - input[9], 2.0) + Math.pow(20.2 - input[10], 2.0) + Math.pow(88.27 - input[11], 2.0) + Math.pow(36.98 - input[12], 2.0))) * -1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(0.03578 - input[0], 2.0) + Math.pow(20.0 - input[1], 2.0) + Math.pow(3.33 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.4429 - input[4], 2.0) + Math.pow(7.82 - input[5], 2.0) + Math.pow(64.5 - input[6], 2.0) + Math.pow(4.6947 - input[7], 2.0) + Math.pow(5.0 - input[8], 2.0) + Math.pow(216.0 - input[9], 2.0) + Math.pow(14.9 - input[10], 2.0) + Math.pow(387.31 - input[11], 2.0) + Math.pow(3.76 - input[12], 2.0))) * 1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(0.18337 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(27.74 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.609 - input[4], 2.0) + Math.pow(5.414 - input[5], 2.0) + Math.pow(98.3 - input[6], 2.0) + Math.pow(1.7554 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(711.0 - input[9], 2.0) + Math.pow(20.1 - input[10], 2.0) + Math.pow(344.05 - input[11], 2.0) + Math.pow(23.97 - input[12], 2.0))) * -1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(6.53876 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(18.1 - input[2], 2.0) + Math.pow(1.0 - input[3], 2.0) + Math.pow(0.631 - input[4], 2.0) + Math.pow(7.016 - input[5], 2.0) + Math.pow(97.5 - input[6], 2.0) + Math.pow(1.2024 - input[7], 2.0) + Math.pow(24.0 - input[8], 2.0) + Math.pow(666.0 - input[9], 2.0) + Math.pow(20.2 - input[10], 2.0) + Math.pow(392.05 - input[11], 2.0) + Math.pow(2.96 - input[12], 2.0))) * 1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(1.22358 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(19.58 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.605 - input[4], 2.0) + Math.pow(6.943 - input[5], 2.0) + Math.pow(97.4 - input[6], 2.0) + Math.pow(1.8773 - input[7], 2.0) + Math.pow(5.0 - input[8], 2.0) + Math.pow(403.0 - input[9], 2.0) + Math.pow(14.7 - input[10], 2.0) + Math.pow(363.43 - input[11], 2.0) + Math.pow(4.59 - input[12], 2.0))) * 1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(10.8342 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(18.1 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.679 - input[4], 2.0) + Math.pow(6.782 - input[5], 2.0) + Math.pow(90.8 - input[6], 2.0) + Math.pow(1.8195 - input[7], 2.0) + Math.pow(24.0 - input[8], 2.0) + Math.pow(666.0 - input[9], 2.0) + Math.pow(20.2 - input[10], 2.0) + Math.pow(21.57 - input[11], 2.0) + Math.pow(25.79 - input[12], 2.0))) * -1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(0.98843 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(8.14 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.538 - input[4], 2.0) + Math.pow(5.813 - input[5], 2.0) + Math.pow(100.0 - input[6], 2.0) + Math.pow(4.0952 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(307.0 - input[9], 2.0) + Math.pow(21.0 - input[10], 2.0) + Math.pow(394.54 - input[11], 2.0) + Math.pow(19.88 - input[12], 2.0))) * -1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(18.0846 - input[0], 2.0) + Math.pow(0.0 - input[1], 2.0) + Math.pow(18.1 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.679 - input[4], 2.0) + Math.pow(6.434 - input[5], 2.0) + Math.pow(100.0 - input[6], 2.0) + Math.pow(1.8347 - input[7], 2.0) + Math.pow(24.0 - input[8], 2.0) + Math.pow(666.0 - input[9], 2.0) + Math.pow(20.2 - input[10], 2.0) + Math.pow(27.25 - input[11], 2.0) + Math.pow(29.05 - input[12], 2.0))) * -1.0 + Math.exp(-0.0000036459736698188483 * (Math.pow(0.0351 - input[0], 2.0) + Math.pow(95.0 - input[1], 2.0) + Math.pow(2.68 - input[2], 2.0) + Math.pow(0.0 - input[3], 2.0) + Math.pow(0.4161 - input[4], 2.0) + Math.pow(7.853 - input[5], 2.0) + Math.pow(33.2 - input[6], 2.0) + Math.pow(5.118 - input[7], 2.0) + Math.pow(4.0 - input[8], 2.0) + Math.pow(224.0 - input[9], 2.0) + Math.pow(14.7 - input[10], 2.0) + Math.pow(392.78 - input[11], 2.0) + Math.pow(3.81 - input[12], 2.0))) * 1.0;
}
